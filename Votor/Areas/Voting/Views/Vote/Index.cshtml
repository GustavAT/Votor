@model Controllers.VoteModel

@{
    ViewBag.Title = $"{Localizer["Vote"]}";
}

<div class="card @ViewBag.cardColor">
    <div class="card-content @ViewBag.cardTextColor">
        <span class="card-title">@Model.EventName</span>
    </div>
    @if (!Model.Completed)
    {
        <div class="card-action card-action-overflow">
            <a class="btn waves-effect waves-light right @ViewBag.mainColor white-text" onclick="completeVote();">@Localizer["Complete"]</a>
            <script>
                function completeVote() {
                    $("#Completed").val("True");
                    $("form").submit();
                }
            </script>
        </div>
    }
</div>


@if (Model.Completed)
{
    @foreach (var item in Model.Choices)
    {
        <div class="card @ViewBag.cardColor">
            <div class="card-content @ViewBag.cardTextColor">
				<span class="card-title">@item.Question</span>
				<br/>
				<p class="black-text">@item.Option</p>
                        
                    
            </div>

        </div>
    }
}
else
{
    using (Html.BeginForm("SaveVoting", "Vote", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.VoteId)
        @Html.HiddenFor(model => model.EventId)
        @Html.HiddenFor(model => model.Completed)

        @Html.HiddenFor(model => model.PublicToken)
        @Html.HiddenFor(model => model.Token)

        @for (var i = 0; i < Model.Choices.Count; i++)
        {
            <div class="card @ViewBag.cardColor">
                <div class="card-content card-no-bottom-padding @ViewBag.cardTextColor">
                   @Html.EditorFor(model => model.Choices[i])
                    <div class="card-internal-action card-action-overflow">
                        <button type="submit" class="btn waves-effect @ViewBag.MainColor waves-light right">@Localizer["Save"]</button>
                    </div>
                </div>
            </div>
        }




    }
}

