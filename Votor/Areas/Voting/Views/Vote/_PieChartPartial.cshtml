@using System.Globalization
@using System.Web
@model Votor.Areas.Voting.Controllers.DistributionPieChartModel

@{
    var chartId = Guid.NewGuid();
}

@if (Model != null)
{
    <div class="card no-margin-bottom">
        <div class="card-content">
            <p class="card-title">@Model.Title</p>
            <div id="@chartId" style="width: 100%; min-height: 300px;"></div>
        </div>
    </div>
    

    <script type="text/javascript">
        var chart = echarts.init(document.getElementById("@chartId"));

        var data = initData();

        if (chart) {

            var options = {
                tooltip: {
                    trigger: "item",
                    formatter: "{a} <br />{b} : {c} ({d}%)"
                },
                legend: {
                    orient: "horizontal",
                    left: "center",
                    data: data.legend
                },
                series: [
                    {
                        name: "@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.Title))",
                        type: "pie",
                        radius: "80%",
                        label: {
                            normal: {
                                formatter: "{b} \n{c} ({d}%)",
                                show: true,
                                position: "inner"
                            }
                        },
                        center: ["50%", "60%"],
                        data: data.series,
                        color: ["#7b1fa2", "#00acc1", "#03a9f4"]

                    }
                ]
            };

            chart.setOption(options);

            window.votorCharts.push(chart);
        }

        function initData() {
            var data = {};
            data.legend = [];
            data.series = [];

            data.legend.push("@Html.Raw(HttpUtility.JavaScriptStringEncode(Localizer["Public"]))");
            data.series.push({
                name: "@Html.Raw(HttpUtility.JavaScriptStringEncode(Localizer["Public"]))",
                value: @Model.PublicVotes.ToString(CultureInfo.InvariantCulture)
            });

            data.legend.push("@Html.Raw(HttpUtility.JavaScriptStringEncode(Localizer["Invites"]))");
            data.series.push({
                name: "@Html.Raw(HttpUtility.JavaScriptStringEncode(Localizer["Invites"]))",
                value: @Model.TokenVotes.ToString(CultureInfo.InvariantCulture)
            });

            data.legend.push("@Html.Raw(HttpUtility.JavaScriptStringEncode(Localizer["Bonus Points"]))");
            data.series.push({
                name: "@Html.Raw(HttpUtility.JavaScriptStringEncode(Localizer["Bonus Points"]))",
                value: @Model.BonusPoints.ToString(CultureInfo.InvariantCulture)
            });
            
            return data;
        }
    </script>
}
