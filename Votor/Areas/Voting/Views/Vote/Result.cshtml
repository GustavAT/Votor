@model Votor.Areas.Voting.Controllers.ResultModel
@* include chart libarry *@
<script type="text/javascript" src="~/js/echarts.min.js"></script>
@{
    ViewBag.Title = Localizer["Results"];
}

<div class="row">
    <div class="col s12">
        <div class="card no-margin-bottom">
            <div class="card-content">
                <p class="card-title">@Model.EventName</p>
                <p>@Model.EventDescription</p>

                <hr />

                <table>
                    <tr>
                        <th>
                            @Localizer["Category"]
                        </th>
                        <th>
                            @Localizer["Winner"]
                        </th>
                        <th>
                            @Localizer["Score"]
                        </th>
                    </tr>
                    <tr>
                        <td>
                            @Localizer["Overall"]
                        </td>
                        <td>
                            @{
                                var winners = Model.Overall.Score
                                    .Where(x => Math.Abs(x.Value - Model.Overall.Score.Max(y => y.Value)) < 0.000001)
                                    .ToList();
                            }
                            @string.Join(", ", winners.Select(x => x.Name))
                        </td>
                        <td>
                            @(winners.FirstOrDefault()?.Value ?? 0)
                        </td>
                    </tr>
                    @foreach (var record in Model.Questions)
                    {
                        <tr>
                            <td>
                                @record.Title
                            </td>
                            <td>
                                @{
                                    var questionWinner = record.Score
                                        .Where(x => Math.Abs(x.Value - record.Score.Max(y => y.Value)) < 0.000001)
                                        .ToList();
                                }
                                @string.Join(", ", questionWinner.Select(x => x.Name))
                            </td>
                            <td>
                                @(questionWinner.FirstOrDefault()?.Value ?? 0)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    window.votorCharts = [];

    window.addEventListener("resize",
        function () {
            for (var i = window.votorCharts.length; i-- > 0;) {
                votorCharts[i].resize();
            }
        });
</script>

<div class="row">
    <div class="col s12 m12 l6">
        @{ await Html.RenderPartialAsync("_PieChartPartial", Model.Distribution);}
    </div>
    <div class="col s12 m12 l6">
        @{ await Html.RenderPartialAsync("_PieChartPartial", Model.Score);}
    </div>
</div>

<div class="row">
    <div class="col s12">
        @{ await Html.RenderPartialAsync("_QuestionChartPartial", Model.Overall);}
    </div>
</div>

<div class="row">
@foreach (var questionChartModel in Model.Questions)
{
    <div class="col s12">
        @{ await Html.RenderPartialAsync("_QuestionChartPartial", questionChartModel); }
    </div>
}
</div>