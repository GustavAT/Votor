@using Votor.Areas.Portal.Controllers
@model Votor.Areas.Portal.Controllers.EventDetailModel

@{
    ViewBag.Title = Localizer["Details"];
}

<div class="row no-margin-bottom">

    <div class="col s12 m6 l4">
        <div class="card card-no-bottom-padding @ViewBag.cardColor">
            <div class="card-content card-no-bottom-padding @ViewBag.cardTextColor">
                <div class="card-title">
                    @Model.Name
                </div>
                @{
                    if (Model.StartDate.HasValue || Model.EndDate.HasValue)
                    {
                        await Html.RenderPartialAsync("_EventStatisticsPartial", Model.ChartValues);
                    }
                    else
                    {
                        await Html.RenderPartialAsync("_InvitePieChartPartial", Model.TokenValues);
                    }
                }
            </div>
        </div>
    </div>

    <div class="col s12 m6 l8">
        <div class="card @ViewBag.cardColor">
            <div class="card-content">
                <span class="card-title @ViewBag.cardTextColor">@Model.Name</span>
                <div id="general">
                    @Model.Description
                </div>

                @if (!string.IsNullOrEmpty(Model.PublicUrl))
                {
                    <p>
                        @Html.LabelFor(model => model.PublicUrl)<br />
                        <a target="_blank" href="@Model.PublicUrl">@Model.PublicUrl</a>
                    </p>
                }
                
                <br />
                
                <p>
                    @Html.LabelFor(model => model.ApiUrl)<br />
                    <a target="_blank" href="@Model.ApiUrl">@Model.ApiUrl</a>
                </p>
                
                <br />

                <p>
                    @if (Model.ShowOverallWinner)
                    {
                        @Localizer["Overall winner is shown in results."]
                    }
                    else
                    {
                        @Localizer["Overall winner is not shown in results."]
                    }
                </p>

                <div class="card-internal-action card-action-overflow">
                    
                    @if (Model.EndDate.HasValue)
                    {
                        <a target="_blank" asp-area="" asp-controller="Vote" asp-action="Result" asp-route-eventId="@Model.Id"
                           class="btn waves-effect waves-light button-seperator right @ViewBag.MainColor">
                            <i class="material-icons left">insert_chart</i>@Localizer["Results"]
                        </a>
                    }

                    <a target="_blank" asp-controller="QrCode" asp-action="Index" asp-route-eventId="@Model.Id" asp-route-groupName=""
                       class="btn waves-effect waves-light button-seperator right @ViewBag.MainColor">
                        <i class="material-icons left">border_outer</i>
                        @Localizer["QR-Codes"]
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row no-margin-bottom">
    
    @if (!Model.EndDate.HasValue)
    {
        <div class="col s12 m6 l4">
            <div class="card @ViewBag.cardColor">
                <div class="card-content card-no-bottom-padding @ViewBag.cardTextColor">
                    <span class="card-title">
                        @Localizer["New Invite"]
                    </span>
                    @{
                        await Html.RenderPartialAsync("_AddTokenFromDetailsPartial", new TokenModel
                        {
                            EventId = Model.Id,
                            Token = string.Empty,
                            Count = 5,
                            Weight = 1,
                            Options = Model.Options
                        });
                    }
                </div>
            </div>
        </div>
    }

    @foreach (var token in Model.Tokens)
    {
        <div class="col s12 m6 l4">
            <div class="card @ViewBag.cardColor">
                <div class="card-content @ViewBag.cardTextColor">

                    <div class="card-title">
                        @token.Name
                    </div>
                    <div class="black-text">
                        <p class="@ViewBag.cardTextColor">
                            @Localizer["{0} of {1}", token.Completed, token.Count]
                        </p>
                        <div class="btn-margin-top-5"></div>
                        @if (!string.IsNullOrEmpty(token.Restriction))
                        {
                            <p>
                                @($"{Localizer["Restriction"]}: {token.Restriction}")
                            </p>
                        }
                        <p>
                            @($"{Localizer["Weight"]}: {token.Weight}")
                        </p>
                    </div>
                    
                    <a target="_blank" asp-controller="QrCode" asp-action="Index" asp-route-eventId="@Model.Id"
                       asp-route-groupName="@token.Name" title="@Localizer["QR-Codes"]"
                       class="@ViewBag.cardTextColor votor-card-action">
                        <i class="material-icons left">border_outer</i>
                    </a>
                </div>
            </div>
        </div>
    }
</div>